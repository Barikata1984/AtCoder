#include <algorithm>#include <iostream>#include <vector>#include <cmath>#include <map>int main(){    int n, k;    std::cin >> n >> k;    std::multimap<int, int> mmp;    mmp.insert(std::make_pair(0, 0));    for(int i = 0; i < n; ++i){        int val;        std::cin >> val;        mmp.insert(std::make_pair(std::abs(val), val));    }    std::vector<int> vec(k);    auto maxItr = mmp.begin();    for(int i = 0; i < k; ++i){        vec.at(i) = maxItr++->first;    }    int ans, min = *std::min_element(vec.begin(), vec.end()), max = *std::max_element(vec.begin(), vec.end());    if(0 == min * max){        ans = std::max(std::abs(min), std::abs(max));    }else if(0 > min * max){        ans = 2 * std::min(std::abs(min), std::abs(max)) + std::max(std::abs(min), std::abs(max));    }            std::cout << ans << std::endl;    return 0;}