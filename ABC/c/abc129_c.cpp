#include <iostream>#include <vector>const int INF = 1e9 + 7;int main(){    int n, m;    std::cin >> n >> m;    std::vector<int> broken(n + 1, 0);    for(int i = 0; i < m; ++i){        int val;        std::cin >> val;        ++broken.at(val);    }        std::vector<long long> steps(n + 1, 0);    steps.at(0) = 1;    if(0 == *(broken.begin() + 1)){        steps.at(1) = 1;    }    for(int i = 2; i <= n; ++i){        if(0 == broken.at(i)){            steps.at(i) = (steps.at(i - 1) + steps.at(i - 2)) % INF;        }    }    std::cout << steps.at(n) << std::endl;    return 0;}