#include <iostream>#include <vector>const int INF = 1e9;void print(std::vector<int> readVec){    int sz = readVec.size();    std::cout << "---" << std::endl;    for(int i = 0; i < sz; ++i){        std::cout << readVec.at(i) << std::endl;    }}int main(){    int n;    std::cin >> n;    std::vector<std::vector<int>> happy(n, std::vector<int> (3, 0));    for(int i = 0; i < n; ++i){        for(int j = 0; j < 3; ++j){            std::cin >> happy.at(i).at(j);        }    }    std::vector<std::vector<int>> dp(n, std::vector<int> (3, 0));    for(int i = 0; i < 3; ++i){        dp.at(0).at(i) = happy.at(0).at(i);    }        for(int i = 1; i < n; ++i){        for(int j = 0; j < 3; ++j){            int max = 0;            for(int k = 0; k < 3; ++k){                if(j != k){                    max = std::max(max, dp.at(i - 1).at(k));                }             }            dp.at(i).at(j) = happy.at(i).at(j) + max;        }    }    std::cout << *std::max_element(dp.at(n - 1).begin(), dp.at(n - 1).end()) << std::endl;    return 0;}