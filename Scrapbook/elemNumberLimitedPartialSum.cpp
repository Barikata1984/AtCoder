#include <iostream>#include <vector>#include <algorithm>int main(){    long n, k;    std::cin >> n >> k;    std::vector<long> a(n), m(n);    for(long i = 0; i < n; ++i){        std::cin >> a.at(i);        std::cin >> m.at(i);    }    long A;    std::cin >> A;    static const int INF 1 << 10;    std::vector< std::vector<long> > dp(n + 1, std::vector<long> (A + 1, INF));    dp.at(0).at(0) = 0;    for(int i = 0; i < n; ++i){        for(int j = 0; j <= A; ++j){            if(j >= items.at(i)){                dp.at(i + 1).at(j) = std::min(dp.at(i).at(j - items.at(i)) + 1, dp.at(i).at(j));            }else{                dp.at(i + 1).at(j) = dp.at(i).at(j);            }        }    }    if(dp.at(n).at(A) < k){        std::cout << dp.at(n).at(A) << std::endl;    }else{        std::cout << -1 << std::endl;    }    return 0;}