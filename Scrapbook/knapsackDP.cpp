#include <iostream>#include <vector>#include <algorithm>int main(){    int n, refW;    std::cin >> n >> refW;    std::vector<int> values(n);    std::vector<int> weights(n);    for(int i = 0; i < n; ++i){        std::cin >> values.at(i) >> weights.at(i);    }    std::vector< std::vector<int> > dp(n + 1, std::vector<int> (refW + 1, 0));    for(int i = 0; i < n; ++i){        for(int w = 0; w <= refW; ++w){            if(w >= weights.at(i)){                dp.at(i + 1).at(w) = std::max(dp.at(i).at(w - weights.at(i)) + values.at(i), dp.at(i).at(w));            }else{                dp.at(i + 1).at(w) = dp.at(i).at(w);            }        }    }    std::cout << dp.at(n).at(refW) << std::endl;    return 0;}